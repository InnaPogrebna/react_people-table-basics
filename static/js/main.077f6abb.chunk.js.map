{"version":3,"sources":["api/api.ts","components/PeopleRow/PeopleRow.tsx","components/PeopleTable/PeopleTable.tsx","components/PeoplePage/PeoplePage.tsx","components/HomePage/HomePage.tsx","App.tsx","index.tsx"],"names":["getPeople","a","fetch","response","json","PeopleRow","person","name","sex","born","died","motherName","fatherName","PeopleTable","people","className","map","slug","PeoplePage","useState","setPeople","useEffect","then","length","color","HomePage","App","to","path","element","replace","ReactDOM","render","document","getElementById"],"mappings":"8RAGaA,EAAS,uCAAG,4BAAAC,EAAA,+EAEEC,MAAM,GAAD,OAJ9B,sEAEuB,cAEfC,EAFe,gBAIRA,EAASC,OAJD,iGAMd,SANc,yDAAH,qD,OCiBPC,EAbmB,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OACnC,OACE,qCACE,6BAAKA,EAAOC,OACZ,6BAAKD,EAAOE,MACZ,6BAAKF,EAAOG,OACZ,6BAAKH,EAAOI,OACZ,6BAAKJ,EAAOK,WAAaL,EAAOK,WAAa,OAC7C,6BAAKL,EAAOM,WAAaN,EAAOM,WAAa,WCmBpCC,G,MAzBsB,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OACtC,OACE,wBAAOC,UAAU,yDAAjB,UACE,gCACE,+BACE,sCACA,qCACA,sCACA,sCACA,wCACA,6CAGJ,gCACGD,EAAOE,KAAI,SAAAV,GAAM,OAChB,6BACE,cAAC,EAAD,CAAWA,OAAQA,KADZA,EAAOW,gBCEXC,EApBc,WAC3B,MAA4BC,mBAAmB,IAA/C,mBAAOL,EAAP,KAAeM,EAAf,KASA,OAPAC,qBAAU,WACRrB,IACGsB,MAAK,SAAAnB,GACJ,OAAOiB,EAAUjB,QAEpB,IAGD,qCACE,oBAAIY,UAAU,QAAd,yBACoB,IAAlBD,EAAOS,OACL,cAAC,IAAD,CAAcC,MAAM,SACpB,cAAC,EAAD,CAAaV,OAAQA,QCbhBW,EANY,WACzB,OACE,oBAAIV,UAAU,QAAd,wBCqBWW,EAjBH,kBACV,sBAAKX,UAAU,MAAf,UACE,iCACE,sBAAKA,UAAU,SAAf,UACE,cAAC,IAAD,CAAMA,UAAU,cAAcY,GAAG,IAAjC,uBACA,cAAC,IAAD,CAAMZ,UAAU,cAAcY,GAAG,UAAjC,8BAGJ,eAAC,IAAD,WACE,cAAC,IAAD,CAAOC,KAAK,IAAIC,QAAS,cAAC,EAAD,MACzB,cAAC,IAAD,CAAOD,KAAK,UAAUC,QAAS,cAAC,EAAD,MAC/B,cAAC,IAAD,CAAOD,KAAK,IAAIC,QAAS,iDACzB,cAAC,IAAD,CAAOD,KAAK,QAAQC,QAAS,cAAC,IAAD,CAAUC,SAAO,EAACH,GAAG,eCfxDI,IAASC,OACP,cAAC,IAAD,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.077f6abb.chunk.js","sourcesContent":["const BASE_URL\n= 'https://mate-academy.github.io/react_people-table/api/people.json';\n\nexport const getPeople = async () => {\n  try {\n    const response = await fetch(`${BASE_URL}`);\n\n    return await response.json();\n  } catch (error) {\n    return 'error';\n  }\n};\n","import React from 'react';\nimport { People } from '../../types/people';\n\ntype Props = {\n  person: People,\n};\n\nconst PeopleRow:React.FC<Props> = ({ person }) => {\n  return (\n    <>\n      <td>{person.name}</td>\n      <td>{person.sex}</td>\n      <td>{person.born}</td>\n      <td>{person.died}</td>\n      <td>{person.motherName ? person.motherName : null}</td>\n      <td>{person.fatherName ? person.fatherName : null}</td>\n    </>\n  );\n};\n\nexport default PeopleRow;\n","import React from 'react';\nimport { People } from '../../types/people';\nimport PeopleRow from '../PeopleRow/PeopleRow';\nimport './PeopleTable.scss';\n\ntype Props = {\n  people: People[],\n};\n\nconst PeopleTable: React.FC<Props> = ({ people }) => {\n  return (\n    <table className=\"table table-border is-hoverable is-striped is-bordered\">\n      <thead>\n        <tr>\n          <th>Name</th>\n          <th>Sex</th>\n          <th>Born</th>\n          <th>Died</th>\n          <th>Mother</th>\n          <th>Father</th>\n        </tr>\n      </thead>\n      <tbody>\n        {people.map(person => (\n          <tr key={person.slug}>\n            <PeopleRow person={person} />\n          </tr>\n        ))}\n      </tbody>\n\n    </table>\n  );\n};\n\nexport default PeopleTable;\n","import React, { useEffect, useState } from 'react';\nimport { RevolvingDot } from 'react-loader-spinner';\nimport { getPeople } from '../../api/api';\nimport { People } from '../../types/people';\nimport PeopleTable from '../PeopleTable/PeopleTable';\n\nconst PeoplePage: React.FC = () => {\n  const [people, setPeople] = useState<People[]>([]);\n\n  useEffect(() => {\n    getPeople()\n      .then(response => {\n        return setPeople(response);\n      });\n  }, []);\n\n  return (\n    <>\n      <h1 className=\"title\">People Page</h1>\n      {(people.length === 0)\n        ? <RevolvingDot color=\"blue\" />\n        : <PeopleTable people={people} /> }\n    </>\n  );\n};\n\nexport default PeoplePage;\n","import React from 'react';\n\nconst HomePage: React.FC = () => {\n  return (\n    <h1 className=\"title\">Home page</h1>\n  );\n};\n\nexport default HomePage;\n","import './App.scss';\nimport 'bulma/css/bulma.min.css';\nimport {\n  Routes, Route, Navigate, Link,\n} from 'react-router-dom';\nimport PeoplePage from './components/PeoplePage/PeoplePage';\nimport HomePage from './components/HomePage/HomePage';\n\nconst App = () => (\n  <div className=\"App\">\n    <header>\n      <nav className=\"navbar\">\n        <Link className=\"navbar-item\" to=\"/\">Home page</Link>\n        <Link className=\"navbar-item\" to=\"/people\">People page</Link>\n      </nav>\n    </header>\n    <Routes>\n      <Route path=\"/\" element={<HomePage />} />\n      <Route path=\"/people\" element={<PeoplePage />} />\n      <Route path=\"*\" element={<p>Page not found</p>} />\n      <Route path=\"/home\" element={<Navigate replace to=\"/\" />} />\n    </Routes>\n  </div>\n);\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport { BrowserRouter as Route } from 'react-router-dom';\n\nimport App from './App';\n\nReactDOM.render(\n  <Route>\n    <App />\n  </Route>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}